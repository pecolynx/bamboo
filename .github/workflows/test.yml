---
on: [pull_request]
name: Test
jobs:
  test_go:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
        workdir:
          - ./
          - ./example/worker-redis-redis
          - ./example/calc-app
    runs-on: ${{ matrix.os }}
    steps:
      # - name: Setup MySQL
      #   uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 3307
      #     mysql version: "5.7"
      #     mysql database: "testdb"
      #     mysql user: "user"
      #     mysql password: "password"
      # - name: Setup MySQL
      #   uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 3317
      #     mysql version: "5.7"
      #     mysql database: "testdb"
      #     mysql user: "user"
      #     mysql password: "password"
      # - name: Setup MySQL
      #   uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 3327
      #     mysql version: "5.7"
      #     mysql database: "testdb"
      #     mysql user: "user"
      #     mysql password: "password"
      # - name: Setup MySQL
      #   uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 3337
      #     mysql version: "5.7"
      #     mysql database: "testdb"
      #     mysql user: "user"
      #     mysql password: "password"
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:
          files: |
            ${{ matrix.workdir }}/**
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - name: Init
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          make work-init
          make work-use
      - name: Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        working-directory: ${{ matrix.workdir }}
        run: go test -coverprofile="coverage.txt" -covermode=atomic ./... -count=1
      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.workdir }}/coverage.txt
          flags: ${{ matrix.workdir }}
